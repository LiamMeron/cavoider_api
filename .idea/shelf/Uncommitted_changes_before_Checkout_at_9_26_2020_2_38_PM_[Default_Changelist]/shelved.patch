Index: cavoider_api_backend/calculations.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import cavoider_api_backend.APIRequests as api\r\nfrom datetime import datetime, timedelta\r\n\r\n# get dataset\r\ndf_NYT_current = api.get_nyt_current_data()\r\ndf_NYT_previous = api.get_nyt_historical_data()\r\ndf_county_pop = api.get_current_county_data()\r\n\r\n# create master dataframe\r\ndf_master = df_NYT_current.merge(df_county_pop, left_on=\"fips\", right_on=\"countyFIPS\")\r\n\r\n\r\n# Calculate cases per 100000 people\r\ndef create_cases_by_population(df_master):\r\n    df_master[\"cases/pop\"] = (df_master[\"cases\"]/df_master[\"population\"])*100000\r\n\r\n\r\n# Calculate deaths per 100000 people\r\ndef create_deaths_by_population(df_master):\r\n    df_master[\"deaths/pop\"] = (df_master[\"deaths\"]/df_master[\"population\"])*100000\r\n\r\n\r\n# Calculate case fatality per 100000 people\r\ndef create_case_fatality_rate(df_master):\r\n    df_master[\"deaths/cases\"] = (df_master[\"deaths\"]/df_master[\"cases\"])*100\r\n\r\n# Calculate number of new cases per day\r\n# (uses yesterday and the day before that to find increase due to data reporting times)\r\ndef create_daily_case_count(df_master):\r\n    current_date = df_NYT_current.iloc[0, 0]\r\n    date = datetime.fromisoformat(current_date)\r\n    yesterday = date - timedelta(days=1)\r\n    day_and_time = yesterday.__str__()\r\n    day_and_time = day_and_time.split(\" \")\r\n    yesterday = day_and_time[0]\r\n\r\n    # calculate difference\r\n    prev_day = date - timedelta(days=2)\r\n    day_and_time = prev_day.__str__()\r\n    day_and_time = day_and_time.split(\" \")\r\n    prev_day = day_and_time[0]\r\n    df_yesterday = df_NYT_previous[df_NYT_previous[\"date\"] == yesterday]\r\n    df_yesterday = df_yesterday[[\"fips\", \"cases\"]]\r\n    df_prev_day = df_NYT_previous[df_NYT_previous[\"date\"] == prev_day]\r\n    df_prev_day = df_prev_day[[\"fips\", \"cases\"]]\r\n    df_prev_day = df_prev_day.rename(columns={\"fips\": \"fips\", \"cases\":\"prev_cases\"})\r\n    df_daily_cases = df_yesterday.merge(df_prev_day, on=\"fips\")\r\n    df_master[\"new_daily_cases\"] = df_daily_cases[\"cases\"] - df_daily_cases[\"prev_cases\"]\r\n\r\n# Calculate number of new deaths per day\r\n# (uses yesterday and the day before that to find increase due to data reporting times)\r\ndef create_daily_death_count(df_master):\r\n    current_date = df_NYT_current.iloc[0, 0]\r\n    date = datetime.fromisoformat(current_date)\r\n    yesterday = date - timedelta(days=1)\r\n    day_and_time = yesterday.__str__()\r\n    day_and_time = day_and_time.split(\" \")\r\n    yesterday = day_and_time[0]\r\n\r\n    # calculate difference\r\n    prev_day = date - timedelta(days=2)\r\n    day_and_time = prev_day.__str__()\r\n    day_and_time = day_and_time.split(\" \")\r\n    prev_day = day_and_time[0]\r\n    df_yesterday = df_NYT_previous[df_NYT_previous[\"date\"] == yesterday]\r\n    df_yesterday = df_yesterday[[\"fips\", \"deaths\"]]\r\n    df_prev_day = df_NYT_previous[df_NYT_previous[\"date\"] == prev_day]\r\n    df_prev_day = df_prev_day[[\"fips\", \"deaths\"]]\r\n    df_prev_day = df_prev_day.rename(columns={\"fips\": \"fips\", \"deaths\":\"prev_deaths\"})\r\n    df_daily_deaths = df_yesterday.merge(df_prev_day, on=\"fips\")\r\n    df_master[\"new_daily_deaths\"] = df_daily_deaths[\"deaths\"] - df_daily_deaths[\"prev_deaths\"]\r\n\r\n# Calculate 14 day trend\r\ndef create_14_day_trend(df_master):\r\n    current_date = df_NYT_current.iloc[0, 0]\r\n    date = datetime.fromisoformat(current_date)\r\n\r\n    # calculate week one\r\n    prev_7_days = date - timedelta(days=7)\r\n    day_and_time = prev_7_days.__str__()\r\n    day_and_time = day_and_time.split(\" \")\r\n    prev_7_days = day_and_time[0]\r\n    df_7_day_prev = df_NYT_previous[df_NYT_previous[\"date\"] == prev_7_days]\r\n    df_7_day_prev = df_7_day_prev[[\"fips\", \"cases\"]]\r\n    df_7_day_prev = df_7_day_prev.rename(columns={\"fips\": \"fips\", \"cases\":\"prev_cases\"})\r\n    df_week_cases = df_NYT_current.merge(df_7_day_prev, on=\"fips\")\r\n    df_week_change = df_week_cases[\"cases\"] - df_week_cases[\"prev_cases\"]\r\n\r\n    # calculate week two\r\n    prev_14_days = date - timedelta(days=14)\r\n    day_and_time = prev_14_days.__str__()\r\n    day_and_time = day_and_time.split(\" \")\r\n    prev_14_days = day_and_time[0]\r\n    df_14_day_prev = df_NYT_previous[df_NYT_previous[\"date\"] == prev_14_days]\r\n    df_7_day_prev = df_NYT_previous[df_NYT_previous[\"date\"] == prev_7_days]\r\n    df_14_day_prev = df_14_day_prev[[\"fips\", \"cases\"]]\r\n    df_14_day_prev = df_14_day_prev.rename(columns={\"fips\": \"fips\", \"cases\":\"prev_cases\"})\r\n    df_prev_week_cases = df_7_day_prev.merge(df_14_day_prev, on=\"fips\")\r\n    df_prev_week_change = df_prev_week_cases[\"cases\"] - df_prev_week_cases[\"prev_cases\"]\r\n\r\n    # find the percent increase\r\n    difference = df_week_change - df_prev_week_change\r\n    df_master[\"percent_increase\"] = (difference/df_prev_week_change)*100\r\n\r\n# Calculate active cases: number of new cases - new deaths within 30 days\r\n# (see COVID Tracking Project - The Atlantic for more info)\r\ndef create_active_cases_estimate(df_master):\r\n    current_date = df_NYT_current.iloc[0, 0]\r\n    date = datetime.fromisoformat(current_date)\r\n\r\n    # estimate active cases as the number of cases\r\n    prev_30_days = date - timedelta(days=30)\r\n    day_and_time = prev_30_days.__str__()\r\n    day_and_time = day_and_time.split(\" \")\r\n    prev_30_days = day_and_time[0]\r\n    df_30_day_prev = df_NYT_previous[df_NYT_previous[\"date\"] == prev_30_days]\r\n    df_30_day_prev = df_30_day_prev[[\"fips\", \"cases\", \"deaths\"]]\r\n    df_30_day_prev = df_30_day_prev.rename(columns={\"fips\": \"fips\", \"cases\": \"prev_cases\", \"deaths\": \"prev_deaths\"})\r\n    df_30_day_change = df_NYT_current.merge(df_30_day_prev, on=\"fips\")\r\n    df_new_cases = df_30_day_change[\"cases\"] - df_30_day_change[\"prev_cases\"]\r\n    df_new_deaths = df_30_day_change[\"deaths\"] - df_30_day_change[\"prev_deaths\"]\r\n    df_master[\"active_cases\"] = df_new_cases - df_new_deaths\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    #run all methods and save them to a new data set which contains all new calculations\r\n    create_cases_by_population(df_master)\r\n    create_deaths_by_population(df_master)\r\n    create_case_fatality_rate(df_master)\r\n    create_14_day_trend(df_master)\r\n    create_active_cases_estimate(df_master)\r\n    create_daily_case_count(df_master)\r\n    create_daily_death_count(df_master)\r\n    df_calculations = df_master\r\n    print(df_calculations)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cavoider_api_backend/calculations.py	(revision b353f0fbb2d84ac27935624a37f87805f46313a6)
+++ cavoider_api_backend/calculations.py	(date 1601145426299)
@@ -12,18 +12,19 @@
 
 # Calculate cases per 100000 people
 def create_cases_by_population(df_master):
-    df_master["cases/pop"] = (df_master["cases"]/df_master["population"])*100000
+    df_master["cases/pop"] = (df_master["cases"] / df_master["population"]) * 100000
 
 
 # Calculate deaths per 100000 people
 def create_deaths_by_population(df_master):
-    df_master["deaths/pop"] = (df_master["deaths"]/df_master["population"])*100000
+    df_master["deaths/pop"] = (df_master["deaths"] / df_master["population"]) * 100000
 
 
 # Calculate case fatality per 100000 people
 def create_case_fatality_rate(df_master):
-    df_master["deaths/cases"] = (df_master["deaths"]/df_master["cases"])*100
+    df_master["deaths/cases"] = (df_master["deaths"] / df_master["cases"]) * 100
 
+
 # Calculate number of new cases per day
 # (uses yesterday and the day before that to find increase due to data reporting times)
 def create_daily_case_count(df_master):
@@ -43,9 +44,12 @@
     df_yesterday = df_yesterday[["fips", "cases"]]
     df_prev_day = df_NYT_previous[df_NYT_previous["date"] == prev_day]
     df_prev_day = df_prev_day[["fips", "cases"]]
-    df_prev_day = df_prev_day.rename(columns={"fips": "fips", "cases":"prev_cases"})
+    df_prev_day = df_prev_day.rename(columns={"fips": "fips", "cases": "prev_cases"})
     df_daily_cases = df_yesterday.merge(df_prev_day, on="fips")
-    df_master["new_daily_cases"] = df_daily_cases["cases"] - df_daily_cases["prev_cases"]
+    df_master["new_daily_cases"] = (
+        df_daily_cases["cases"] - df_daily_cases["prev_cases"]
+    )
+
 
 # Calculate number of new deaths per day
 # (uses yesterday and the day before that to find increase due to data reporting times)
@@ -66,9 +70,12 @@
     df_yesterday = df_yesterday[["fips", "deaths"]]
     df_prev_day = df_NYT_previous[df_NYT_previous["date"] == prev_day]
     df_prev_day = df_prev_day[["fips", "deaths"]]
-    df_prev_day = df_prev_day.rename(columns={"fips": "fips", "deaths":"prev_deaths"})
+    df_prev_day = df_prev_day.rename(columns={"fips": "fips", "deaths": "prev_deaths"})
     df_daily_deaths = df_yesterday.merge(df_prev_day, on="fips")
-    df_master["new_daily_deaths"] = df_daily_deaths["deaths"] - df_daily_deaths["prev_deaths"]
+    df_master["new_daily_deaths"] = (
+        df_daily_deaths["deaths"] - df_daily_deaths["prev_deaths"]
+    )
+
 
 # Calculate 14 day trend
 def create_14_day_trend(df_master):
@@ -82,7 +89,9 @@
     prev_7_days = day_and_time[0]
     df_7_day_prev = df_NYT_previous[df_NYT_previous["date"] == prev_7_days]
     df_7_day_prev = df_7_day_prev[["fips", "cases"]]
-    df_7_day_prev = df_7_day_prev.rename(columns={"fips": "fips", "cases":"prev_cases"})
+    df_7_day_prev = df_7_day_prev.rename(
+        columns={"fips": "fips", "cases": "prev_cases"}
+    )
     df_week_cases = df_NYT_current.merge(df_7_day_prev, on="fips")
     df_week_change = df_week_cases["cases"] - df_week_cases["prev_cases"]
 
@@ -94,14 +103,17 @@
     df_14_day_prev = df_NYT_previous[df_NYT_previous["date"] == prev_14_days]
     df_7_day_prev = df_NYT_previous[df_NYT_previous["date"] == prev_7_days]
     df_14_day_prev = df_14_day_prev[["fips", "cases"]]
-    df_14_day_prev = df_14_day_prev.rename(columns={"fips": "fips", "cases":"prev_cases"})
+    df_14_day_prev = df_14_day_prev.rename(
+        columns={"fips": "fips", "cases": "prev_cases"}
+    )
     df_prev_week_cases = df_7_day_prev.merge(df_14_day_prev, on="fips")
     df_prev_week_change = df_prev_week_cases["cases"] - df_prev_week_cases["prev_cases"]
 
     # find the percent increase
     difference = df_week_change - df_prev_week_change
-    df_master["percent_increase"] = (difference/df_prev_week_change)*100
+    df_master["percent_increase"] = (difference / df_prev_week_change) * 100
 
+
 # Calculate active cases: number of new cases - new deaths within 30 days
 # (see COVID Tracking Project - The Atlantic for more info)
 def create_active_cases_estimate(df_master):
@@ -115,7 +127,9 @@
     prev_30_days = day_and_time[0]
     df_30_day_prev = df_NYT_previous[df_NYT_previous["date"] == prev_30_days]
     df_30_day_prev = df_30_day_prev[["fips", "cases", "deaths"]]
-    df_30_day_prev = df_30_day_prev.rename(columns={"fips": "fips", "cases": "prev_cases", "deaths": "prev_deaths"})
+    df_30_day_prev = df_30_day_prev.rename(
+        columns={"fips": "fips", "cases": "prev_cases", "deaths": "prev_deaths"}
+    )
     df_30_day_change = df_NYT_current.merge(df_30_day_prev, on="fips")
     df_new_cases = df_30_day_change["cases"] - df_30_day_change["prev_cases"]
     df_new_deaths = df_30_day_change["deaths"] - df_30_day_change["prev_deaths"]
Index: cavoider_api_backend/conf.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from environs import Env\r\n\r\nenv = Env()\r\n# Reads the .env file into env_vars, if it exists\r\nenv.read_env()\r\n\r\nCDC_EXCESS_DEATHS_ENDPOINT = env.str(\"CDC_EXCESS_DEATHS_ENDPOINT\") #=> https://data.cdc.gov/resource/r8kw-7aab.json\r\nNYT_HISTORICAL_COUNTIES_ENDPOINT = env.str(\"NYT_HISTORICAL_COUNTIES_ENDPOINT\") #=> https://github.com/nytimes/covid-19-data/raw/master/us-counties.csv\r\nNYT_CURRENT_COUNTIES_ENDPOINT = env.str(\"NYT_CURRENT_COUNTIES_ENDPOINT\") #=>https://github.com/nytimes/covid-19-data/raw/master/live/us-counties.csv\r\nCURRENT_COUNTY_POP_ENDPOINT = env.str(\"CURRENT_COUNTY_POP_ENDPOINT\") #=>https://usafactsstatic.blob.core.windows.net/public/data/covid-19/covid_county_population_usafacts.csv\r\nCURRENT_STATE_ENDPOINT = env.str(\"CURRENT_STATE_ENDPOINT\") #=>https://covidtracking.com/data/download/all-states-history.csv\r\n\r\nif __name__ == \"__main__\":\r\n    print(CDC_EXCESS_DEATHS_ENDPOINT)\r\n    print(NYT_CURRENT_COUNTIES_ENDPOINT)\r\n    print(NYT_HISTORICAL_COUNTIES_ENDPOINT)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cavoider_api_backend/conf.py	(revision b353f0fbb2d84ac27935624a37f87805f46313a6)
+++ cavoider_api_backend/conf.py	(date 1601145426306)
@@ -4,13 +4,23 @@
 # Reads the .env file into env_vars, if it exists
 env.read_env()
 
-CDC_EXCESS_DEATHS_ENDPOINT = env.str("CDC_EXCESS_DEATHS_ENDPOINT") #=> https://data.cdc.gov/resource/r8kw-7aab.json
-NYT_HISTORICAL_COUNTIES_ENDPOINT = env.str("NYT_HISTORICAL_COUNTIES_ENDPOINT") #=> https://github.com/nytimes/covid-19-data/raw/master/us-counties.csv
-NYT_CURRENT_COUNTIES_ENDPOINT = env.str("NYT_CURRENT_COUNTIES_ENDPOINT") #=>https://github.com/nytimes/covid-19-data/raw/master/live/us-counties.csv
-CURRENT_COUNTY_POP_ENDPOINT = env.str("CURRENT_COUNTY_POP_ENDPOINT") #=>https://usafactsstatic.blob.core.windows.net/public/data/covid-19/covid_county_population_usafacts.csv
-CURRENT_STATE_ENDPOINT = env.str("CURRENT_STATE_ENDPOINT") #=>https://covidtracking.com/data/download/all-states-history.csv
+CDC_EXCESS_DEATHS_ENDPOINT = env.str(
+    "CDC_EXCESS_DEATHS_ENDPOINT"
+)  # => https://data.cdc.gov/resource/r8kw-7aab.json
+NYT_HISTORICAL_COUNTIES_ENDPOINT = env.str(
+    "NYT_HISTORICAL_COUNTIES_ENDPOINT"
+)  # => https://github.com/nytimes/covid-19-data/raw/master/us-counties.csv
+NYT_CURRENT_COUNTIES_ENDPOINT = env.str(
+    "NYT_CURRENT_COUNTIES_ENDPOINT"
+)  # =>https://github.com/nytimes/covid-19-data/raw/master/live/us-counties.csv
+CURRENT_COUNTY_POP_ENDPOINT = env.str(
+    "CURRENT_COUNTY_POP_ENDPOINT"
+)  # =>https://usafactsstatic.blob.core.windows.net/public/data/covid-19/covid_county_population_usafacts.csv
+CURRENT_STATE_ENDPOINT = env.str(
+    "CURRENT_STATE_ENDPOINT"
+)  # =>https://covidtracking.com/data/download/all-states-history.csv
 
 if __name__ == "__main__":
     print(CDC_EXCESS_DEATHS_ENDPOINT)
     print(NYT_CURRENT_COUNTIES_ENDPOINT)
-    print(NYT_HISTORICAL_COUNTIES_ENDPOINT)
\ No newline at end of file
+    print(NYT_HISTORICAL_COUNTIES_ENDPOINT)
Index: cavoider_api_backend/APIRequests.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\nfrom datetime import datetime\r\nfrom pathlib import Path\r\nfrom urllib.parse import urlparse\r\n\r\nimport pandas\r\nimport requests\r\n\r\nfrom cavoider_api_backend import conf\r\n\r\nCACHE_PATH = Path(\"../res/cache/\")\r\n\r\ndef get_data_from_endpoint(endpoint, is_current):\r\n    today = datetime.now().date().isoformat()\r\n    if is_current:\r\n        data_date = \"current\"\r\n    else:\r\n        data_date = \"historical\"\r\n    filename = f\"{today}_{data_date}_{os.path.basename(urlparse(endpoint).path)}\"\r\n    file_extension = filename.split(\".\")[-1]\r\n    file_cache_path = Path(CACHE_PATH) / filename\r\n    if file_cache_path.exists():\r\n        if file_extension == \"json\":\r\n            df = pandas.read_json(file_cache_path)\r\n        elif file_extension == \"csv\":\r\n            df = pandas.read_csv(file_cache_path)\r\n        else:\r\n            raise ValueError(f\"File Extension: {file_extension}\")\r\n        return df\r\n    else:\r\n        with open(file_cache_path, mode=\"wb\") as f:\r\n            response = requests.get(endpoint)\r\n            f.write(response.content)\r\n        return get_data_from_endpoint(endpoint, data_date)\r\n\r\ndef get_excess_deaths_from_cdc():\r\n    endpoint = conf.CDC_EXCESS_DEATHS_ENDPOINT\r\n    return get_data_from_endpoint(endpoint, True)\r\n\r\ndef get_nyt_historical_data():\r\n    endpoint = conf.NYT_HISTORICAL_COUNTIES_ENDPOINT\r\n    return get_data_from_endpoint(endpoint, False)\r\n\r\ndef get_nyt_current_data():\r\n    endpoint = conf.NYT_CURRENT_COUNTIES_ENDPOINT\r\n    return get_data_from_endpoint(endpoint, True)\r\n\r\ndef get_current_county_data():\r\n    endpoint = conf.CURRENT_COUNTY_POP_ENDPOINT\r\n    return get_data_from_endpoint(endpoint, True)\r\n\r\ndef get_current_state_data():\r\n    endpoint = conf.CURRENT_STATE_ENDPOINT\r\n    return get_data_from_endpoint(endpoint, True)\r\n\r\nif __name__ == \"__main__\":\r\n    get_nyt_current_data() #CSV\r\n    get_excess_deaths_from_cdc() #JSON\r\n    get_nyt_historical_data()\r\n    get_current_county_data()\r\n    get_current_state_data()\r\n    #with Path(\"../out/nytHistorical.xlsx\").open(\"wb\") as f:\r\n    #    df.to_excel(f)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cavoider_api_backend/APIRequests.py	(revision b353f0fbb2d84ac27935624a37f87805f46313a6)
+++ cavoider_api_backend/APIRequests.py	(date 1601145426408)
@@ -10,6 +10,7 @@
 
 CACHE_PATH = Path("../res/cache/")
 
+
 def get_data_from_endpoint(endpoint, is_current):
     today = datetime.now().date().isoformat()
     if is_current:
@@ -33,31 +34,37 @@
             f.write(response.content)
         return get_data_from_endpoint(endpoint, data_date)
 
+
 def get_excess_deaths_from_cdc():
     endpoint = conf.CDC_EXCESS_DEATHS_ENDPOINT
     return get_data_from_endpoint(endpoint, True)
 
+
 def get_nyt_historical_data():
     endpoint = conf.NYT_HISTORICAL_COUNTIES_ENDPOINT
     return get_data_from_endpoint(endpoint, False)
 
+
 def get_nyt_current_data():
     endpoint = conf.NYT_CURRENT_COUNTIES_ENDPOINT
     return get_data_from_endpoint(endpoint, True)
 
+
 def get_current_county_data():
     endpoint = conf.CURRENT_COUNTY_POP_ENDPOINT
     return get_data_from_endpoint(endpoint, True)
 
+
 def get_current_state_data():
     endpoint = conf.CURRENT_STATE_ENDPOINT
     return get_data_from_endpoint(endpoint, True)
 
+
 if __name__ == "__main__":
-    get_nyt_current_data() #CSV
-    get_excess_deaths_from_cdc() #JSON
+    get_nyt_current_data()  # CSV
+    get_excess_deaths_from_cdc()  # JSON
     get_nyt_historical_data()
     get_current_county_data()
     get_current_state_data()
-    #with Path("../out/nytHistorical.xlsx").open("wb") as f:
+    # with Path("../out/nytHistorical.xlsx").open("wb") as f:
     #    df.to_excel(f)
Index: cavoider_api_backend/__init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n\r\n# TODO Decide on data format for calculations in API\r\n\r\n\r\n# TODO Create method to get daily increase in deaths and cases\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- cavoider_api_backend/__init__.py	(revision b353f0fbb2d84ac27935624a37f87805f46313a6)
+++ cavoider_api_backend/__init__.py	(date 1601145426436)
@@ -1,7 +1,4 @@
-
-
 # TODO Decide on data format for calculations in API
 
 
 # TODO Create method to get daily increase in deaths and cases
-
